name: Monorepo CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # This job determines which services have changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      go-service: ${{ steps.filter.outputs.go-service }}
      node-service: ${{ steps.filter.outputs.node-service }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          go-service:
            - 'apps/go-service/**'
          node-service:
            - 'apps/node-service/**'

  # This job builds, scans, and pushes images for changed services
  build-and-push:
    needs: changes
    # Run this job only if at least one service has changed
    if: needs.changes.outputs.go-service == 'true' |

| needs.changes.outputs.node-service == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Create a matrix of services that have changed
        service:
          - ${{ needs.changes.outputs.go-service == 'true' && 'go-service' |

| '' }}
          - ${{ needs.changes.outputs.node-service == 'true' && 'node-service' |

| '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image for Trivy scan
        uses: docker/build-push-action@v5
        with:
          context:./apps/${{ matrix.service }}
          push: false
          load: true
          tags: ${{ matrix.service }}:scan

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.18.0
        with:
          image-ref: '${{ matrix.service }}:scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1' # Fail the build if vulnerabilities are found

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Build and push final image
        uses: docker/build-push-action@v5
        with:
          context:./apps/${{ matrix.service }}
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{ github.sha }}

  # This job deploys the new images to Kubernetes
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > ~/.kube/config

      - name: Update Kubernetes manifests with new image tags
        run: |
          cd infra/kubernetes/overlays/production
          kustomize edit set image ghcr.io/${{ github.repository_owner }}/go-service=ghcr.io/${{ github.repository_owner }}/go-service:${{ github.sha }}
          kustomize edit set image ghcr.io/${{ github.repository_owner }}/node-service=ghcr.io/${{ github.repository_owner }}/node-service:${{ github.sha }}

      - name: Deploy to Kubernetes
        run: kubectl apply -k infra/kubernetes/overlays/production