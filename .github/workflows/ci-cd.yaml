name: Monorepo CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # This job uses dorny/paths-filter to determine which services have changed.
  # It outputs a JSON array of changed services, e.g., '["go-service", "node-service"]'
  changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            go-service:
              - 'apps/go-service/**'
            node-service:
              - 'apps/node-service/**'

  # This job builds, scans, and pushes images for changed services
  build-and-push:
    needs: changes
    # The job will only run if the 'services' output array is not empty.
    if: ${{ needs.changes.outputs.services!= '' }}
    runs-on: ubuntu-latest
    strategy:
      # The matrix is dynamically created from the JSON array output by the 'changes' job.
      matrix:
        service: ${{ fromJson(needs.changes.outputs.services) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image for Trivy scan
        uses: docker/build-push-action@v5
        with:
          context:./apps/${{ matrix.service }}
          push: false
          load: true
          tags: ${{ matrix.service }}:scan

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.18.0
        with:
          image-ref: '${{ matrix.service }}:scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1' # Fail the build if vulnerabilities are found

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
          category: ${{ matrix.service }} # Differentiate scans in the Security tab

      - name: Build and push final image
        uses: docker/build-push-action@v5
        with:
          context:./apps/${{ matrix.service }}
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{ github.sha }}

  # This job deploys the new images to Kubernetes
  deploy:
    # This job depends on the build-and-push job completing successfully.
    needs: [changes, build-and-push]
    if: ${{ needs.build-and-push.result == 'success' && needs.changes.outputs.services!= '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > ~/.kube/config

      - name: Update Kubernetes manifests with new image tags
        run: |
          cd infra/kubernetes/overlays/production
          # Loop through the changed services and update the image for each one
          for service in ${{ join(fromJson(needs.changes.outputs.services), ' ') }}; do
            echo "Updating image for $service"
            kustomize edit set image your-registry/$service=ghcr.io/${{ github.repository_owner }}/$service:${{ github.sha }}
          done

      - name: Deploy to Kubernetes
        run: kubectl apply -k infra/kubernetes/overlays/production